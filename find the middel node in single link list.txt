#include<stdio.h>
#include<stdlib.h>

struct node
{
        int data;
        struct node *next;
};

struct node *create_list(struct node *head);
void display(struct node *head);
struct node *addatbeg(struct node *head,int data);
struct node *addatend(struct node *head,int data);
int findMiddle(struct node *head);

int main()
{
        struct node *head=NULL;
        head=create_list(head);
        display(head);

        if(head!=NULL)
        printf("\nMiddle element is %d\n",findMiddle(head) );

        return 0;

}/*End of main()*/

int findMiddle(struct node *head)
{
        struct node *slow, *fast;
        if(head->next==NULL) /*only one node*/
                return head->data;
        slow=fast=head;

        
        while(fast->next!=NULL && fast->next->next!=NULL)
        {
                slow=slow->next;
                fast=fast->next->next;
        }
        return slow->data;
}

struct node *create_list(struct node *head)
{
        int i,n,data;
        printf("Enter the number of nodes : ");
        scanf("%d",&n);
        head=NULL;
        if(n==0)
                return head;

        printf("\nEnter the element to be inserted : ");
        scanf("%d",&data);
        head=addatbeg(head,data);

        for(i=2;i<=n;i++)
        {
                printf("\nEnter the element to be inserted : ");
                scanf("%d",&data);
                head=addatend(head,data);
        }
        return head;
}

void display(struct node *head)
{
        struct node *p;
        if(head==NULL)
        {
                printf("\nList is empty\n");
                return;
        }
        p=head;
        printf("\nList is :\n");
        while(p!=NULL)
        {
                printf("%d ",p->data);
                p=p->next;
        }
        printf("\n\n");
}/*End of display() */

struct node *addatbeg(struct node *head,int data)
{
        struct node *tmp;
        tmp=(struct node *)malloc(sizeof(struct node));
        tmp->data=data;
        tmp->next=head;
        head=tmp;
        return head;
}

struct node *addatend(struct node *head,int data)
{
        struct node *p,*tmp;
        tmp=(struct node *)malloc(sizeof(struct node));
        tmp->data=data;
        p=head;
        while(p->next!=NULL)
                p=p->next;
        p->next=tmp;
        tmp->next=NULL;
        return head;
}